install.packages('devtools')
library(devtools)
devtools::install_github('physicsland/ezids')
library(ezids)
xkablesummary
xkablesummary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
daily_activity_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/dailyActivity_merged.csv")
heartrate_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/heartrate_seconds_merged.csv")
hourlyCalories_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/hourlyCalories_merged.csv")
hourlyIntensities_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/hourlyIntensities_merged.csv")
hourlySteps_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/hourlySteps_merged.csv")
minuteCaloriesNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteCaloriesNarrow_merged.csv")
minuteIntensitiesNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteIntensitiesNarrow_merged.csv")
minuteMETSNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteMETSNarrow_merged.csv")
minuteSleep_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteSleep_merged.csv")
minuteStepsNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteStepsNarrow_merged.csv")
weightLogInfo_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/weightLogInfo_merged.csv")
daily_activity_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/dailyActivity_merged.csv")
heartrate_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/heartrate_seconds_merged.csv")
hourlyCalories_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/hourlyCalories_merged.csv")
hourlyIntensities_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/hourlyIntensities_merged.csv")
hourlySteps_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/hourlySteps_merged.csv")
minuteCaloriesNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/minuteCaloriesNarrow_merged.csv")
minuteIntensitiesNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/minuteIntensitiesNarrow_merged.csv")
minuteMETSNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/minuteMETSNarrow_merged.csv")
minuteSleep_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/minuteSleep_merged.csv")
minuteStepsNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/minuteStepsNarrow_merged.csv")
weightLogInfo_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/weightLogInfo_merged.csv")
daily_activity_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/dailyActivity_merged.csv")
heartrate_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/heartrate_seconds_merged.csv")
hourlyCalories_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/hourlyCalories_merged.csv")
hourlyIntensities_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/hourlyIntensities_merged.csv")
hourlySteps_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/hourlySteps_merged.csv")
minuteCaloriesNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteCaloriesNarrow_merged.csv")
minuteIntensitiesNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteIntensitiesNarrow_merged.csv")
minuteMETSNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteMETSNarrow_merged.csv")
minuteSleep_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteSleep_merged.csv")
minuteStepsNarrow_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteStepsNarrow_merged.csv")
weightLogInfo_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/weightLogInfo_merged.csv")
daily_activity_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/dailyActivity_merged.csv")
heartrate_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/heartrate_seconds_merged.csv")
hourlyCalories_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/hourlyCalories_merged.csv")
hourlyIntensities_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/hourlyIntensities_merged.csv")
hourlySteps_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/hourlySteps_merged.csv")
minuteCaloriesNarrow_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/minuteCaloriesNarrow_merged.csv")
minuteIntensitiesNarrow_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/minuteIntensitiesNarrow_merged.csv")
minuteMETSNarrow_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/minuteMETSNarrow_merged.csv")
minuteSleep_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/minuteSleep_merged.csv")
minuteStepsNarrow_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/minuteStepsNarrow_merged.csv")
weightLogInfo_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/weightLogInfo_merged.csv")
weightLogInfo_month1
weightLogInfo_month2
weightLogInfo_month2.head()
head(weightLogInfo_month2)
head(weightLogInfo_month1)
head(weightLogInfo_month1)
head(weightLogInfo_month2)
head(weightLogInfo_month1)
head(weightLogInfo_month2)
weightDifference <- weightLogInfo_month1$WeightPounds - weightLogInfo_month2$WeightPounds
weightDifference
knitr::opts_chunk$set(echo = TRUE)
head(weightLogInfo_month1)
head(weightLogInfo_month2)
weightDifference <- weightLogInfo_month1$WeightPounds - weightLogInfo_month2$WeightPounds
weightDifference
head(daily_activity_month1)
head(daily_activity_month2)
head(weightLogInfo_month1)
head(weightLogInfo_month2)
weightDifference <- weightLogInfo_month1$WeightPounds - weightLogInfo_month2$WeightPounds
weightDifference
head(daily_activity_month1)
head(daily_activity_month2)
stepDifference <- daily_activity_month1$TotalSteps - daily_activity_month2$TotalSteps
head(stepDifference)
head(weightLogInfo_month1)
head(weightLogInfo_month2)
weightDifference <- weightLogInfo_month1$WeightPounds - weightLogInfo_month2$WeightPounds
head(weightDifference)
head(daily_activity_month1)
head(daily_activity_month2)
stepDifference <- daily_activity_month1$TotalSteps - daily_activity_month2$TotalSteps
head(stepDifference)
head(weightLogInfo_month1)
head(weightLogInfo_month2)
weightDifference <- weightLogInfo_month2$WeightPounds - weightLogInfo_month1$WeightPounds
head(weightDifference)
head(daily_activity_month1)
head(daily_activity_month2)
stepDifference <- daily_activity_month2$TotalSteps - daily_activity_month1$TotalSteps
head(stepDifference)
weightLogInfo_month1 <- weightLogInfo_month1 %>% distinct()
dplyr::distinct()
dplyr::distinct()
library(dplyr)
weightLogInfo_month1 <- weightLogInfo_month1 %>% distinct()
weightLogInfo_month2 <- weightLogInfo_month2 %>% distinct()
head(weightLogInfo_month1)
head(weightLogInfo_month2)
weightDifference <- weightLogInfo_month2$WeightPounds - weightLogInfo_month1$WeightPounds
head(weightDifference)
#weightLogInfo_month1 <- weightLogInfo_month1 %>% distinct()
#weightLogInfo_month2 <- weightLogInfo_month2 %>% distinct()
weightLogInfo_month1 <- weightLogInfo_month1 %>%
group_by(Id) %>%
filter(n() == 1) %>%
ungroup()
weightLogInfo_month2 <- weightLogInfo_month2 %>%
group_by(Id) %>%
filter(n() == 1) %>%
ungroup()
head(weightLogInfo_month1)
head(weightLogInfo_month2)
weightDifference <- weightLogInfo_month2$WeightPounds - weightLogInfo_month1$WeightPounds
head(weightDifference)
weightLogInfo_month2 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month2/weightLogInfo_merged.csv")
weightLogInfo_month1 <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/weightLogInfo_merged.csv")
head(weightLogInfo_month1)
head(weightLogInfo_month2)
weightDifference <- weightLogInfo_month2$WeightPounds - weightLogInfo_month1$WeightPounds
head(weightDifference)
colnames(daily_activity_month1)
colnames(daily_activity_month1)
colnames(minuteMETSNarrow_month1)
colnames(minuteMETSNarrow_month1)
colnames(daily_activity_month1)
colnames(heartrate_month1)
colnames(hourlyCalories_month1)
colnames(hourlyIntensities_month1)
colnames(hourlySteps_month1)
colnames(minuteCaloriesNarrow_month1)
colnames(minuteIntensitiesNarrow_month1)
colnames(minuteMETSNarrow_month1)
colnames(minuteSleep_month1)
colnames(minuteStepsNarrow_month1)
colnames(weightLogInfo_month1)
colnames(daily_activity_month1)
colnames(heartrate_month1)
colnames(hourlyCalories_month1)
colnames(hourlyIntensities_month1)
colnames(hourlySteps_month1)
colnames(minuteCaloriesNarrow_month1)
colnames(minuteIntensitiesNarrow_month1)
colnames(minuteMETSNarrow_month1)
colnames(minuteSleep_month1)
colnames(minuteStepsNarrow_month1)
colnames(weightLogInfo_month1)
head(daily_activity_month1)
head(heartrate_month1)
head(hourlyCalories_month1)
head(hourlySteps_month1)
head(minuteCaloriesNarrow_month1)
head(minuteIntensitiesNarrow_month1)
head(minuteMETSNarrow_month1)
head(minuteSleep_month1)
head(minuteStepsNarrow_month1)
head(weightLogInfo_month1)
View(minuteStepsNarrow_month1)
getwd()
setwd("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project")
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(lubridate)
intervals <- read.csv("C:/Users/NP/OneDrive/Desktop/GWU/Intro-to-R-course/fitbit/intervals.csv")
intervals <- read.csv("/data/fitbit/intervals.csv")
intervals <- read.csv("/data/fitbit/timestep_data/intervals.csv")
intervals <- read.csv("data/fitbit/timestep_data/intervals.csv")
head(intervals)
str(intervals)
intervals$day_of_week <- factor(intervals$day_of_week, levels = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
cor(intervals$avg_steps, intervals$avg_calories)
cor(intervals$avg_steps, intervals$avg_mets)
cor(intervals$avg_calories, intervals$avg_mets)
# correlation matrix
correlation_matrix <- cor(intervals[, c("avg_steps", "avg_calories", "avg_mets")])
correlation_matrix
library(ggcorrplot)
ggcorrplot(correlation_matrix, hc.order = TRUE, type = "lower", lab = TRUE)
# correlation plot
ggplot(intervals, aes(x = avg_steps, y = avg_calories)) +
geom_point() +
ggtitle("Scatterplot of Steps vs. Calories Burned") +
xlab("Steps") +
ylab("Calories") +
geom_smooth(method = "lm")
ggplot(intervals, aes(x = avg_steps)) +
geom_histogram(fill = "yellow", color = "black", bins = 30) +
ggtitle("Distribution of Steps Taken") +
xlab("Steps")
ggplot(intervals, aes(x = avg_calories)) +
geom_histogram(fill = "red", color = "black", bins = 30) +
ggtitle("Distribution of Calories Burned") +
xlab("Calories Burned")
# Compute correlation matrix
cor_matrix <- cor(intervals[, c("avg_steps", "avg_sleep", "avg_intensity", "avg_calories", "avg_mets")],
use = "complete.obs")
cor_matrix
# Visualizing correlation matrix
library(ggcorrplot)
ggcorrplot(cor_matrix, method = "circle", lab = TRUE, colors = c("red", "white", "blue"))
# Convert interval_start to Date-Time format
intervals$interval_start <- as.POSIXct(intervals$interval_start, format="%Y-%m-%d%H:%M:%S")
head(intervals$interval_start)
# Extract additional time-based features
intervals$hour <- hour(intervals$interval_start)
intervals$day_of_week <- weekdays(intervals$interval_start)
intervals$month <- month(intervals$interval_start)
intervals$year <- year(intervals$interval_start)
head(intervals)
# Aggregating data by day
daily_data <- intervals %>%
group_by(date = as.Date(interval_start)) %>%
summarise(
avg_steps = mean(avg_steps, na.rm = TRUE),
avg_sleep = mean(avg_sleep, na.rm = TRUE),
avg_calories = mean(avg_calories, na.rm = TRUE),
avg_mets = mean(avg_mets, na.rm = TRUE)
)
head(daily_data)
# Plotting steps over time
ggplot(daily_data, aes(x = date, y = avg_steps)) +
geom_line() +
ggtitle("Daily Average Steps Over Time") +
xlab("Date") +
ylab("Average Steps")
qqnorm(intervals$avg_steps, main = "QQ Steps Taken")
qqline(intervals$avg_steps, col='red')
qqnorm(intervals$avg_calories, main = "QQ Calories Burned")
qqline(intervals$avg_calories, col='red')
ggplot(intervals, aes(x=day_of_week, y = avg_calories)) +
geom_boxplot(fill = "green", color = "black") +
ggtitle("Calories Burned By Day of Week") +
ylab("Calories Burned")
ggplot(intervals, aes(x=day_of_week, y = avg_steps)) +
geom_boxplot(fill = "green", color = "black") +
ggtitle("Steps Taken By Day of Week") +
ylab("Steps Taken")
View(intervals)
daily_steps <- aggregate(avg_steps ~ Date + day_of_week, data = intervals, sum)
daily_steps <- aggregate(avg_steps ~ day_of_week + day_of_week, data = intervals, sum)
boxplot(avg_steps ~ day_of_week, data = daily_steps,
xlab = "Day of the Week",
ylab = "Total Steps per Day",
main = "Daily Total Steps by Day of the Week",
col = "lightblue")
daily_steps <- aggregate(avg_steps ~ Date + day_of_week, data = interval, sum)
daily_steps <- aggregate(avg_steps ~ Date + day_of_week, data = intervals, sum)
df$Date <- as.Date(intervals$interval_start)
intervals$Date <- as.Date(intervals$interval_start)
daily_steps <- aggregate(avg_steps ~ Date + day_of_week, data = intervals, sum)
# Calculate mean steps per day of week
mean_steps <- aggregate(avg_steps ~ day_of_week, data = daily_steps, mean)
# (Optional) Sort days of the week
mean_steps$day_of_week <- factor(mean_steps$day_of_week,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saturday", "Sunday"))
# Create bar plot
barplot(mean_steps$avg_steps,
names.arg = mean_steps$day_of_week,
col = "skyblue",
main = "Average Total Steps per Day of Week",
ylab = "Average Total Steps",
xlab = "Day of the Week",
las = 2)  # Rotate axis labels for readability
qqnorm(intervals$avg_steps, main = "QQ Steps Taken")
qqline(intervals$avg_steps, col='red')
qqnorm(intervals$avg_calories, main = "QQ Calories Burned")
qqline(intervals$avg_calories, col='red')
# Convert interval_start to POSIXct (if not already)
#intervals$interval_start <- as.POSIXct(intervals$interval_start)
# Extract hour of day
intervals$hour <- as.numeric(format(intervals$interval_start, "%H"))
# Aggregate total steps per hour
hourly_steps <- aggregate(avg_steps ~ hour, data = intervals, sum)
# Create bar plot
barplot(hourly_steps$avg_steps,
names.arg = hourly_steps$hour,
col = "orange",
main = "Total Steps by Hour of Day",
xlab = "Hour of Day (0–23)",
ylab = "Total Steps",
las = 2)
# Convert interval_start to POSIXct (if not already)
#intervals$interval_start <- as.POSIXct(intervals$interval_start)
intervals$hour_label <- format(intervals$interval_start, "%I %p")  # e.g., "01 AM", "02 PM"
intervals$hour_label <- factor(intervals$hour_label,
levels = format(strptime(0:23, format="%H"), "%I %p"))  # Ordered factor
# Extract hour of day
intervals$hour <- as.numeric(format(intervals$interval_start, "%H"))
# Aggregate total steps per hour
hourly_steps <- aggregate(avg_steps ~ hour, data = intervals, sum)
# Create bar plot
barplot(hourly_steps$avg_steps,
names.arg = hourly_steps$hour,
col = "orange",
main = "Total Steps by Hour of Day",
xlab = "Hour of Day (0–23)",
ylab = "Total Steps",
las = 2)
# TODO: Differentiate between AM and PM hours
# Convert interval_start to POSIXct (if not already)
#intervals$interval_start <- as.POSIXct(intervals$interval_start)
# Extract hour of day
intervals$hour <- as.numeric(format(intervals$interval_start, "%H"))
intervals$hour_label <- format(intervals$interval_start, "%I %p")  # e.g., "01 AM", "02 PM"
intervals$hour_label <- factor(intervals$hour_label,
levels = format(strptime(0:23, format="%H"), "%I %p"))  # Ordered factor
# Aggregate total steps per hour
hourly_steps <- aggregate(avg_steps ~ hour, data = intervals, sum)
# Create bar plot
barplot(hourly_steps$avg_steps,
names.arg = hourly_steps$hour,
col = "orange",
main = "Total Steps by Hour of Day",
xlab = "Hour of Day (0–23)",
ylab = "Total Steps",
las = 2)
# TODO: Differentiate between AM and PM hours
# Convert interval_start to POSIXct (if not already)
#intervals$interval_start <- as.POSIXct(intervals$interval_start)
# Extract hour of day
intervals$hour <- as.numeric(format(intervals$interval_start, "%H"))
intervals$hour_label <- format(intervals$interval_start, "%I %p")  # e.g., "01 AM", "02 PM"
intervals$hour_label <- factor(intervals$hour_label,
levels = format(strptime(0:23, format="%H"), "%I %p"))  # Ordered factor
# Aggregate total steps per hour
hourly_steps <- aggregate(avg_steps ~ hour, data = intervals, sum)
hourly_steps$hour <- factor(hourly_steps$hour, levels = sprintf("%02d", 0:23))
# Create bar plot
barplot(hourly_steps$avg_steps,
names.arg = hourly_steps$hour,
col = "orange",
main = "Total Steps by Hour of Day",
xlab = "Hour of Day (0–23)",
ylab = "Total Steps",
las = 2)
# TODO: Differentiate between AM and PM hours
# Convert timestamp
intervals$interval_start <- as.POSIXct(intervals$interval_start)
# Extract hour (0–23) as a factor with military-style formatting
intervals$hour <- format(intervals$interval_start, "%H")  # returns "00", "01", ..., "23"
# Aggregate total steps by hour
hourly_steps <- aggregate(avg_steps ~ hour, data = intervals, sum)
# Order the hour labels properly (so it doesn't sort as characters)
hourly_steps$hour <- factor(hourly_steps$hour, levels = sprintf("%02d", 0:23))
# Bar plot
barplot(hourly_steps$avg_steps,
names.arg = hourly_steps$hour,
col = "darkorange",
main = "Total Steps by Hour (Military Time)",
xlab = "Hour (24-Hour Format)",
ylab = "Total Steps",
las = 2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
steps <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteStepsNarrow_merged.csv")
heart_rate <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/heartrate_seconds_merged.csv")
sleep <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteSleep_merged.csv")
intensity <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteIntensitiesNarrow_merged.csv")
calories <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteCaloriesNarrow_merged.csv")
mets <- read.csv("C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/mturkfitbit_export_month1/minuteMETsNarrow_merged.csv")
steps$ActivityMinute <- parse_date_time(steps$ActivityMinute, orders = c("mdy HMS", "mdy HM"))
heart_rate$ActivityMinute <- parse_date_time(heart_rate$Time, orders = c("mdy HMS", "mdy HM"))
sleep$ActivityMinute <- parse_date_time(sleep$date, orders = c("mdy HMS", "mdy HM"))
intensity$ActivityMinute <- parse_date_time(intensity$ActivityMinute, orders = c("mdy HMS", "mdy HM"))
calories$ActivityMinute <- parse_date_time(calories$ActivityMinute, orders = c("mdy HMS", "mdy HM"))
mets$ActivityMinute <- parse_date_time(mets$ActivityMinute, orders = c("mdy HMS", "mdy HM"))
interval_data <- interval_data %>%
mutate(day_of_week = wday(interval_start, label = TRUE, abbr = FALSE))
interval_data <- interval_steps %>%
left_join(interval_sleep, by = c("interval_start")) %>%
left_join(interval_intensity, by = c("interval_start")) %>%
left_join(interval_calories, by = c("interval_start")) %>%
left_join(interval_mets, by = c("interval_start"))
interval_steps <- steps %>%
mutate(interval_start = floor_date(ActivityMinute, unit = "5 minutes")) %>%
group_by(interval_start) %>%
summarise(avg_steps = mean(Steps, na.rm = TRUE), .groups = "drop")
interval_sleep <- sleep %>%
mutate(interval_start = floor_date(ActivityMinute, unit = "5 minutes")) %>%
group_by(interval_start) %>%
summarise(avg_sleep = mean(value, na.rm = TRUE), .groups = "drop")
interval_intensity <- intensity %>%
mutate(interval_start = floor_date(ActivityMinute, unit = "5 minutes")) %>%
group_by(interval_start) %>%
summarise(avg_intensity = mean(Intensity, na.rm = TRUE), .groups = "drop")
interval_calories <- calories %>%
mutate(interval_start = floor_date(ActivityMinute, unit = "5 minutes")) %>%
group_by(interval_start) %>%
summarise(avg_calories = mean(Calories, na.rm = TRUE), .groups = "drop")
interval_mets <- mets %>%
mutate(interval_start = floor_date(ActivityMinute, unit = "5 minutes")) %>%
group_by(interval_start) %>%
summarise(avg_mets = mean(METs, na.rm = TRUE), .groups = "drop")
interval_data <- interval_steps %>%
left_join(interval_sleep, by = c("interval_start")) %>%
left_join(interval_intensity, by = c("interval_start")) %>%
left_join(interval_calories, by = c("interval_start")) %>%
left_join(interval_mets, by = c("interval_start"))
interval_data <- interval_data %>%
mutate(day_of_week = wday(interval_start, label = TRUE, abbr = FALSE))
interval_data <- interval_data %>%
mutate(hour_military = format(interval_start, "%H"))
write.csv(interval_data, "C:/Users/JDS221/GWU/DATS6101/projects/DATS6101_Project/data/fitbit/timestep_data/intervals.csv", row.names = FALSE)
library(tidyverse)
library(ggplot2)
library(lubridate)
intervals <- read.csv("data/fitbit/timestep_data/intervals.csv")
head(intervals)
str(intervals)
